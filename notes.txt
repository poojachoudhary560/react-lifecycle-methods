Lifecycle Methods

- Mounting: When an instance of a component is being created and inserted into DOM
- Updating: when a component is re-rendered as a result of changes to either its props or state.
- Unmounting: When a component is being removed from the DOM.
- Error Handling: When there is error in rendering, in a lifecycle method, or in constructor of
any child component.

Mounting
- constructor
- static getDerivedStateFromProps
- render
- componentDidMount

Updating
- static getDerivedStateFromProps
- shouldComponentUpdate
- render
- getSnapshotBeforeUpdate
- componentDidUpdate

Unmounting
- componentWillUnmount

Error Handling
- getDerivedStateFromError
- componentDidCatch

 ------------ MOUNTING ----------
constructor
- initializing state
- binding event handlers

static getDerivedStateFromProps( props, state )
- When the state of component depends on changes in props over time
- it does not have access to this keyword thus you cannot call this.setState({})
- You just return the new state as object
- do not cause side effects in this method

render
- only required method
- read props and state and  return JSX
- do not change state or interact with DOM here
- Children component lifecycle methods are also executed

componentDidMount
- invoked immediately after a component and all its children components have been rendered to the DOM
- Cause side effects here

------------- UPDATING -------------
https://www.youtube.com/watch?v=DyPkojd1fas

static getDerivedStateFromProps( props, state )
- returns either null or object that represents the updated state of the component
- it is called every time the component is re-rendered
- when the state depends on the props of the component
- do not use for side-effects

shouldComponentUpdate( nextProps, nextState )
- dictates if the component should re-render or not
- can prevent the default re-render behaviour by returning false
- basically used for performance optimization
- do not use for side-effects or setState

render

getSnapshotBeforeUpdate( prevProps, prevState )
- Called right before the changes from virtual DOM are to be reflected in Real DOM
- Capture some information from the DOM
- example you can read users scroll position before the update and maintain that scroll position after the update
- can either return a null or a value
- returned value will be passed as the third parameter to the next value

componentDidUpdate (prevProps, prevState, snapshot )
- called after the render is finished in the re-render cycles
- guaranteed to be called once in re-render cycles, so you can perform side-effects here

------------  UNMOUNTING -----------

componentWillUnmount
- method is invoked immediately before a component is unmounted and destroyed
- we can perform any cleanup tasks here like 
--- cancelling network requests
--- removing event handlers
--- canceling any subscriptions
--- invalidating timers from setTimeout or setInterval
- do not call setState

------------- ERROR HANDLING  ----------
- static getDerivedStateFromError(error)
- componentDidCatch( error, info )
Called when there is an error during rendering, in a lifecycle method, or in constructor of any
child component.

